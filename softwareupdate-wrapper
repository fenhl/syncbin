#!/usr/bin/env python3

if __name__ != '__main__':
    raise ImportError('This module is not for importing!')

import sys

sys.path.append('/opt/py')

import basedir
import datetime
import os.path
import subprocess

with open('/dev/null', 'a') as dev_null:
    if subprocess.call(['which', 'softwareupdate'], stdout=dev_null, stderr=subprocess.STDOUT) != 0:
        sys.exit(2)

if not os.path.exists(next(iter(basedir.data_dirs('syncbin/startup.json')))):
    with open(next(iter(basedir.data_dirs('syncbin/startup.json'))), 'w') as f:
        print('{}', file=f)

data_file = basedir.data_dirs('syncbin/startup.json').lazy_json(existing_only=True, default={'lastSoftwareUpdate': '1970-01-01 00:00:00'}) #TODO remove existing_only in favor of adding correct error handling to lazyjson.MultiFile

if datetime.datetime.strptime(data_file['lastSoftwareUpdate'].value(), '%Y-%m-%d %H:%M:%S') >= datetime.datetime.utcnow() - datetime.timedelta(hours=8):
    sys.exit() # software update check has run in the last 8 hours, no need to run again yet

softwareupdate = subprocess.Popen(['softwareupdate', '--list'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
out, _ = softwareupdate.communicate()
for line in out.decode('utf-8').splitlines():
    if line == 'No new software available.':
        data_file['lastSoftwareUpdate'] = datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')
        sys.exit()
    if line.strip().startswith('*'):
        break
else:
    sys.exit(1)

print('[OS X] Software updates available. Install with `sudo softwareupdate -ir`.')
data_file['lastSoftwareUpdate'] = datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')
