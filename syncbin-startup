#!/bin/zsh

DESCRIPTION=$'Run startup scripts for Fenhl\'s syncbin.'

USAGE=$'Usage:
. syncbin-startup [options]
  syncbin-startup -h | --help'

OPTIONS=$'Options:
  -h, --help          Print this message and exit.
  --ignore-lock       Release and ignore the lock that prevents this script from running multiple times at once.
  --no-internet-test  Do not run `syncbin-hasinet\' to test for internet connectivity, but run all other startup scripts regardless.'

function print-progress {
    if where clear-eol &> /dev/null; then
        printf '['"$1"'] '
        clear-eol
        printf "$2"'\r'
    else
        printf '['"$1"'] '"$2"'\r'
    fi
}

function print-warning {
    if where clear-eol &> /dev/null; then
        printf '[ !! ] '
        clear-eol
        printf 'warning: '"$2"'\n'
    else
        printf '[ !! ] warning: '"$2"'\n'
    fi
    print-progress "$2" "$3"
}

lockdir=/tmp/syncbin-startup.lock

IGNOREINET=1
IGNORELOCK=1

while [[ $# -gt "0" ]]; do
    if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        echo "$DESCRIPTION"
        echo
        echo "$USAGE"
        echo
        echo "$OPTIONS"
        exit 0
    fi
    if [[ "$1" == "--no-internet-test" ]]; then
        IGNOREINET=0
    elif [[ "$1" == "--ignore-lock" ]]; then
        IGNORELOCK=0
    else
        echo $USAGE >&2
        exit 1
    fi
    shift
done

if [[ "$IGNORELOCK" == "0" ]]; then
    print-warning 'releasing startup lock' '=...' 'acquiring startup lock'
    rm -rf "$lockdir"
else
    print-progress '=...' 'acquiring startup lock'
    until mkdir "${lockdir}" &> /dev/null; do
        sleep 1
        printf '[.=..]\r'
        sleep 1
        printf '[..=.]\r'
        sleep 1
        printf '[...=]\r'
        sleep 1
        printf '[..=.]\r'
        sleep 1
        printf '[.=..]\r'
        sleep 1
        printf '[=...]\r'
    done
    trap 'rm -rf "$lockdir"' 0 # remove lock when script finishes
fi

print-progress '==..' 'running startup scripts: syncbin hasinet'

if [[ "$IGNOREINET" == "1" ]] && where syncbin-hasinet &> /dev/null; then
    syncbin-hasinet
    SYNCBINHASINET=$?
else
    SYNCBINHASINET=0
fi
if [[ $SYNCBINHASINET -eq 0 ]]; then
    print-progress '===.' 'running startup scripts: apt'
    if where apt-get-wrapper &> /dev/null; then
        apt-get-wrapper
    fi
    print-progress '===.' 'running startup scripts: softwareupdate'
    if where softwareupdate-wrapper &> /dev/null; then
        softwareupdate-wrapper
    fi
    print-progress '===.' 'running startup scripts: brew'
    if where brew &> /dev/null; then
        brew update > /dev/null
        brew upgrade > /dev/null
    fi
    print-progress '===.' 'running startup scripts: gem'
    if where gem-wrapper &> /dev/null; then
        gem-wrapper
    fi
    print-progress '===.' 'running startup scripts: gitdir'
    if [[ -d /opt/hub ]]; then
        print-warning '/opt/hub exists' '===.' 'running startup scripts: gitdir'
    fi
    if [[ -d ~/hub ]]; then
        print-warning '~/hub exists' '===.' 'running startup scripts: gitdir'
    fi
    #TODO add a script that updates the gitdirs
    print-progress '===.' 'running startup scripts: compinit'
    if where compinit &> /dev/null; then
        compinit -D -u
    else
        print-warning 'could not initialize completion: compinit not found' '===.' 'running startup scripts: compinit'
    fi
    print-progress '===.' 'running startup scripts: syncbin update'
    syncbin update
else
    print-warning 'no internet connection, skipping startup scripts' '==..' 'running startup scripts: syncbin hasinet'
fi
print-progress '====' 'running startup scripts: zshrc'
if where zshrc &> /dev/null; then
    . zshrc
fi
rm -rf "$lockdir" # remove lock
